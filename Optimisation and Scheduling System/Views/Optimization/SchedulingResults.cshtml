@model Optimisation_and_Scheduling_System.Models.OptimizationResultModel

@{
    ViewBag.Title = "Driver Scheduling Results";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h2 class="mb-0">Driver Scheduling Results</h2>
                <span class="badge badge-success p-2 text-dark">Completed: @Model.CreatedAt.ToString("yyyy-MM-dd HH:mm")</span>
            </div>
            
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary d-flex justify-content-between align-items-center">
                    <h4 class="mb-0 text-dark">Weekly Schedule</h4>
                    <div>
                        <a href="@Url.Action("GetResultsJson", "Optimization")" class="btn btn-sm btn-light" target="_blank">
                            <i class="fa fa-download"></i> Export JSON
                        </a>
                        <a href="@Url.Action("Index", "Optimization")" class="btn btn-sm btn-light ml-2">
                            <i class="fa fa-home"></i> Back to Hub
                        </a>
                    </div>
                </div>
                <div class="card-body p-0">
                    <!-- Day selection tabs -->
                    <ul class="nav nav-tabs nav-fill" id="scheduleTabs" role="tablist">
                        @for (int day = 1; day <= 7; day++)
                        {
                            string dayName = new DateTime(2023, 1, (day % 7) + 1).ToString("dddd");
                            <li class="nav-item">
                                <a class="nav-link @(day == 1 ? "active" : "")" id="day@(day)-tab" data-toggle="tab" href="#day@(day)" role="tab">
                                    <strong>Day @day</strong><br>
                                    <small>@dayName</small>
                                </a>
                            </li>
                        }
                    </ul>
                    
                    <!-- Tab content -->
                    <div class="tab-content p-3" id="scheduleTabsContent">
                        @for (int day = 1; day <= 7; day++)
                        {
                            <div class="tab-pane fade @(day == 1 ? "show active" : "")" id="day@(day)" role="tabpanel">
                                <div class="row">
                                    <!-- Primary Assignments -->
                                    <div class="col-lg-7">
                                        <div class="card border-0 shadow-sm mb-4">
                                            <div class="card-header bg-info">
                                                <h5 class="mb-0 text-dark"><i class="fa fa-user-check mr-2"></i>Primary Driver Assignments</h5>
                                            </div>
                                            <div class="card-body p-0">
                                                <div class="table-responsive">
                                                    <table class="table table-hover mb-0">
                                                        <thead class="thead-light">
                                                            <tr>
                                                                <th>Route</th>
                                                                <th>Shift Time</th>
                                                                <th>Driver</th>
                                                                <th>Performance</th>
                                                                <th>Experience</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @if (Model.Assignments != null && Model.Assignments.ContainsKey($"Day_{day}"))
                                                            {
                                                                foreach (var assignment in Model.Assignments[$"Day_{day}"])
                                                                {
                                                                    string routeId = assignment.Key.Split('_')[1];
                                                                    string shiftId = assignment.Key.Split('_')[3];
                                                                    int driverId = assignment.Value.FirstOrDefault();
                                                                    
                                                                    // Get shift time based on route and shift ID
                                                                    string shiftTime = "Unknown";
                                                                    if (int.TryParse(routeId, out int routeIdInt) && int.TryParse(shiftId, out int shiftIdInt))
                                                                    {
                                                                        // This is mock data since we don't have access to the actual route data in the view
                                                                        // In a real implementation, this would come from a database or model
                                                                        Dictionary<int, string[]> routeShifts = new Dictionary<int, string[]>
                                                                        {
                                                                            { 1, new[] { "06:00-14:00", "14:00-22:00" } },
                                                                            { 2, new[] { "05:30-13:30", "13:30-21:30" } },
                                                                            { 3, new[] { "07:00-15:00", "15:00-23:00" } },
                                                                            { 4, new[] { "06:30-14:30", "14:30-22:30" } },
                                                                            { 5, new[] { "07:30-15:30", "15:30-23:30" } },
                                                                            { 6, new[] { "06:00-14:00", "14:00-22:00" } }
                                                                        };
                                                                        
                                                                        if (routeShifts.ContainsKey(routeIdInt) && shiftIdInt < routeShifts[routeIdInt].Length)
                                                                        {
                                                                            shiftTime = routeShifts[routeIdInt][shiftIdInt];
                                                                        }
                                                                    }
                                                                    
                                                                    // Mock driver data
                                                                    Dictionary<int, dynamic> driverData = new Dictionary<int, dynamic>
                                                                    {
                                                                        { 1, new { Performance = 92, Experience = 10, Gender = "M" } },
                                                                        { 2, new { Performance = 92, Experience = 5, Gender = "F" } },
                                                                        { 3, new { Performance = 78, Experience = 8, Gender = "M" } },
                                                                        { 4, new { Performance = 78, Experience = 15, Gender = "F" } },
                                                                        { 5, new { Performance = 95, Experience = 20, Gender = "M" } },
                                                                        { 6, new { Performance = 85, Experience = 9, Gender = "M" } },
                                                                        { 7, new { Performance = 80, Experience = 7, Gender = "F" } },
                                                                        { 8, new { Performance = 89, Experience = 11, Gender = "M" } },
                                                                        { 9, new { Performance = 90, Experience = 12, Gender = "F" } },
                                                                        { 10, new { Performance = 88, Experience = 6, Gender = "M" } },
                                                                        { 11, new { Performance = 86, Experience = 14, Gender = "F" } },
                                                                        { 12, new { Performance = 84, Experience = 3, Gender = "M" } },
                                                                        { 13, new { Performance = 83, Experience = 7, Gender = "F" } },
                                                                        { 14, new { Performance = 91, Experience = 8, Gender = "M" } },
                                                                        { 15, new { Performance = 87, Experience = 5, Gender = "F" } },
                                                                        { 16, new { Performance = 82, Experience = 4, Gender = "M" } },
                                                                        { 17, new { Performance = 79, Experience = 10, Gender = "F" } },
                                                                        { 18, new { Performance = 88, Experience = 9, Gender = "M" } },
                                                                        { 19, new { Performance = 85, Experience = 6, Gender = "F" } },
                                                                        { 20, new { Performance = 93, Experience = 15, Gender = "M" } }
                                                                    };
                                                                    
                                                                    var driver = driverData.ContainsKey(driverId) ? driverData[driverId] : null;
                                                                    
                                                                    <tr>
                                                                        <td>
                                                                            <span class="badge badge-primary text-dark">Route @routeId</span>
                                                                        </td>
                                                                        <td>@shiftTime</td>
                                                                        <td>
                                                                            <strong>Driver @driverId</strong>
                                                                            @if (driver != null)
                                                                            {
                                                                                <span class="ml-2 badge @(driver.Gender == "F" ? "badge-info" : "badge-secondary") text-dark">
                                                                                    @(driver.Gender == "F" ? "Female" : "Male")
                                                                                </span>
                                                                            }
                                                                        </td>
                                                                        <td>
                                                                            @if (driver != null)
                                                                            {
                                                                                <div class="progress" style="height: 20px;">
                                                                                    <div class="progress-bar @GetPerformanceClass(driver.Performance) text-dark" 
                                                                                         role="progressbar" 
                                                                                         style="width: @(driver.Performance)%;" 
                                                                                         aria-valuenow="@driver.Performance" 
                                                                                         aria-valuemin="0" 
                                                                                         aria-valuemax="100">@driver.Performance%</div>
                                                                                </div>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span>N/A</span>
                                                                            }
                                                                        </td>
                                                                        <td>
                                                                            @if (driver != null)
                                                                            {
                                                                                <span class="badge badge-pill badge-light text-dark">@driver.Experience years</span>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span>N/A</span>
                                                                            }
                                                                        </td>
                                                                    </tr>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr>
                                                                    <td colspan="5" class="text-center py-3">No primary assignments for Day @day</td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Backup Assignments -->
                                    <div class="col-lg-5">
                                        <div class="card border-0 shadow-sm">
                                            <div class="card-header bg-warning text-dark">
                                                <h5 class="mb-0"><i class="fa fa-user-shield mr-2"></i>Backup Driver Assignments</h5>
                                            </div>
                                            <div class="card-body p-0">
                                                <div class="table-responsive">
                                                    <table class="table table-hover mb-0">
                                                        <thead class="thead-light">
                                                            <tr>
                                                                <th>Driver</th>
                                                                <th>Backup For</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @if (Model.Backups != null && Model.Backups.ContainsKey($"Day_{day}"))
                                                            {
                                                                foreach (var backup in Model.Backups[$"Day_{day}"])
                                                                {
                                                                    string driverId = backup.Key.Split('_')[1];
                                                                    
                                                                    <tr>
                                                                        <td>
                                                                            <strong>Driver @driverId</strong>
                                                                        </td>
                                                                        <td>
                                                                            @if (backup.Value != null && backup.Value.Count > 0)
                                                                            {
                                                                                foreach (var routeShift in backup.Value)
                                                                                {
                                                                                    <div class="badge badge-warning mr-1 mb-1 p-2 text-dark">
                                                                                        Route @routeShift[0], Shift @routeShift[1]
                                                                                    </div>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <span class="text-muted">General backup (no specific assignments)</span>
                                                                            }
                                                                        </td>
                                                                    </tr>
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <tr>
                                                                    <td colspan="2" class="text-center py-3">No backup assignments for Day @day</td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            
            <!-- Schedule Summary -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-success">
                    <h4 class="mb-0 text-dark">Schedule Summary</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="card bg-light mb-3">
                                <div class="card-body text-center">
                                    <h5 class="card-title">Total Shifts</h5>
                                    <h2>@GetTotalShifts(Model)</h2>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card bg-light mb-3">
                                <div class="card-body text-center">
                                    <h5 class="card-title">Total Routes</h5>
                                    <h2>@GetTotalRoutes(Model)</h2>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card bg-light mb-3">
                                <div class="card-body text-center">
                                    <h5 class="card-title">Backup Drivers</h5>
                                    <h2>@GetTotalBackups(Model)</h2>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Tab navigation initialization
            $('#scheduleTabs a').on('click', function (e) {
                e.preventDefault();
                $(this).tab('show');
            });
            
            // Enable tooltips if Bootstrap tooltips are available
            if (typeof $().tooltip === 'function') {
                $('[data-toggle="tooltip"]').tooltip();
            }
        });
    </script>
}

@functions {
    public string GetPerformanceClass(int performance)
    {
        if (performance >= 90) return "bg-success";
        if (performance >= 80) return "bg-info";
        if (performance >= 70) return "bg-primary";
        if (performance >= 60) return "bg-warning";
        return "bg-danger";
    }
    
    public int GetTotalShifts(Optimisation_and_Scheduling_System.Models.OptimizationResultModel model)
    {
        int total = 0;
        if (model.Assignments != null)
        {
            foreach (var day in model.Assignments)
            {
                total += day.Value.Count;
            }
        }
        return total;
    }
    
    public int GetTotalRoutes(Optimisation_and_Scheduling_System.Models.OptimizationResultModel model)
    {
        HashSet<string> routes = new HashSet<string>();
        if (model.Assignments != null)
        {
            foreach (var day in model.Assignments)
            {
                foreach (var assignment in day.Value)
                {
                    string routeId = assignment.Key.Split('_')[1];
                    routes.Add(routeId);
                }
            }
        }
        return routes.Count;
    }
    
    public int GetTotalBackups(Optimisation_and_Scheduling_System.Models.OptimizationResultModel model)
    {
        int total = 0;
        if (model.Backups != null)
        {
            foreach (var day in model.Backups)
            {
                total += day.Value.Count;
            }
        }
        return total;
    }
} 